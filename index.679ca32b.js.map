{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAYnC,IAAA,EAAT,WACE,IAAM,EAAW,EAAM,IAAI,CAAC,MAAM,CAC5B,EAAc,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,AAE9C,CAAA,EAAgB,QAAQ,CAAG,GAAY,EACvC,EAAgB,QAAQ,CAAG,GAAY,EACvC,EAAmB,QAAQ,CAAG,GAAe,EAC7C,EAAmB,QAAQ,CAAG,GAAe,CAC/C,EAnBM,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAkB,SAAS,aAAa,CAAC,eACzC,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAQ,SAAS,aAAa,CAAC,UAE/B,EAAU,GACV,EAAa,GACb,EAAU,EACV,EAAa,EAYnB,EAAgB,gBAAgB,CAAC,QAAS,WAIxC,IAAK,IAHC,EAAS,EAAM,SAAS,GACxB,EAAc,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAErC,EAAI,EAAG,EAAI,EAAa,IAC/B,EAAO,UAAU,GAEnB,GACF,GAEA,EAAgB,gBAAgB,CAAC,QAAS,WACpC,EAAM,IAAI,CAAC,MAAM,CAAG,GACtB,EAAM,SAAS,CAAC,IAElB,GACF,GAEA,EAAmB,gBAAgB,CAAC,QAAS,WACtC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,E,C,M,E,CADX,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,GACF,GAEA,EAAmB,gBAAgB,CAAC,QAAS,WAEpC,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADP,GAAI,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAG,EAAjC,GAAA,CACE,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAIP,GACF,GAEA,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var updateButtons = function updateButtons() {\n        var rowCount = table.rows.length;\n        var columnCount = table.rows[0].cells.length;\n        appendRowButton.disabled = rowCount >= maxRows;\n        removeRowButton.disabled = rowCount <= minRows;\n        appendColumnButton.disabled = columnCount >= maxColumns;\n        removeColumnButton.disabled = columnCount <= minColumns;\n    };\n    var appendRowButton = document.querySelector(\".append-row\");\n    var removeRowButton = document.querySelector(\".remove-row\");\n    var appendColumnButton = document.querySelector(\".append-column\");\n    var removeColumnButton = document.querySelector(\".remove-column\");\n    var table = document.querySelector(\".field\");\n    var maxRows = 10;\n    var maxColumns = 10;\n    var minRows = 2;\n    var minColumns = 2;\n    appendRowButton.addEventListener(\"click\", function() {\n        var newRow = table.insertRow();\n        var columnCount = table.rows[0].cells.length;\n        for(var i = 0; i < columnCount; i++)newRow.insertCell();\n        updateButtons();\n    });\n    removeRowButton.addEventListener(\"click\", function() {\n        if (table.rows.length > minRows) table.deleteRow(-1);\n        updateButtons();\n    });\n    appendColumnButton.addEventListener(\"click\", function() {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.insertCell();\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        updateButtons();\n    });\n    removeColumnButton.addEventListener(\"click\", function() {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        if (table.rows[0].cells.length > minColumns) try {\n            for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.deleteCell(-1);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        updateButtons();\n    });\n    updateButtons();\n});\n\n//# sourceMappingURL=index.679ca32b.js.map\n","'use strict';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const appendRowButton = document.querySelector('.append-row');\n  const removeRowButton = document.querySelector('.remove-row');\n  const appendColumnButton = document.querySelector('.append-column');\n  const removeColumnButton = document.querySelector('.remove-column');\n  const table = document.querySelector('.field');\n\n  const maxRows = 10;\n  const maxColumns = 10;\n  const minRows = 2;\n  const minColumns = 2;\n\n  function updateButtons() {\n    const rowCount = table.rows.length;\n    const columnCount = table.rows[0].cells.length;\n\n    appendRowButton.disabled = rowCount >= maxRows;\n    removeRowButton.disabled = rowCount <= minRows;\n    appendColumnButton.disabled = columnCount >= maxColumns;\n    removeColumnButton.disabled = columnCount <= minColumns;\n  }\n\n  appendRowButton.addEventListener('click', () => {\n    const newRow = table.insertRow();\n    const columnCount = table.rows[0].cells.length;\n\n    for (let i = 0; i < columnCount; i++) {\n      newRow.insertCell();\n    }\n    updateButtons();\n  });\n\n  removeRowButton.addEventListener('click', () => {\n    if (table.rows.length > minRows) {\n      table.deleteRow(-1);\n    }\n    updateButtons();\n  });\n\n  appendColumnButton.addEventListener('click', () => {\n    for (const row of table.rows) {\n      row.insertCell();\n    }\n    updateButtons();\n  });\n\n  removeColumnButton.addEventListener('click', () => {\n    if (table.rows[0].cells.length > minColumns) {\n      for (const row of table.rows) {\n        row.deleteCell(-1);\n      }\n    }\n    updateButtons();\n  });\n\n  updateButtons();\n});\n"],"names":["document","addEventListener","updateButtons","rowCount","table","rows","length","columnCount","cells","appendRowButton","disabled","maxRows","removeRowButton","minRows","appendColumnButton","maxColumns","removeColumnButton","minColumns","querySelector","newRow","insertRow","i","insertCell","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","deleteCell"],"version":3,"file":"index.679ca32b.js.map"}